version: '3.8'

services:
  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - app1
      - app2
      - app3
    networks:
      - game-network

  # Redis for caching and session management
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - game-network

  # Application instances
  app1:
    build: .
    environment:
      - NODE_ENV=production
      - APP_ID=app1
      - PORT=3001
      - REDIS_URL=redis://redis:6379
      - INFLUXDB_URL=http://influxdb1:8086
      - INFLUXDB_TOKEN=zIGlnIr44LpdJnobJ68V8AHdzsWfaIShovlLY9m5ZDX3j_8SisNNq7BF-btVVgFuHMtlXEkswG0xoO0UoXcw4w==
      - INFLUXDB_ORG=nhom_12
      - INFLUXDB_BUCKET=bucket1
    ports:
      - "3001:3001"
    depends_on:
      - redis
      - influxdb1
    networks:
      - game-network
    restart: unless-stopped

  app2:
    build: .
    environment:
      - NODE_ENV=production
      - APP_ID=app2
      - PORT=3002
      - REDIS_URL=redis://redis:6379
      - INFLUXDB_URL=http://influxdb2:8086
      - INFLUXDB_TOKEN=zIGlnIr44LpdJnobJ68V8AHdzsWfaIShovlLY9m5ZDX3j_8SisNNq7BF-btVVgFuHMtlXEkswG0xoO0UoXcw4w==
      - INFLUXDB_ORG=nhom_12
      - INFLUXDB_BUCKET=buckets1
    ports:
      - "3002:3002"
    depends_on:
      - redis
      - influxdb2
    networks:
      - game-network
    restart: unless-stopped

  app3:
    build: .
    environment:
      - NODE_ENV=production
      - APP_ID=app3
      - PORT=3003
      - REDIS_URL=redis://redis:6379
      - INFLUXDB_URL=http://influxdb3:8086
      - INFLUXDB_TOKEN=zIGlnIr44LpdJnobJ68V8AHdzsWfaIShovlLY9m5ZDX3j_8SisNNq7BF-btVVgFuHMtlXEkswG0xoO0UoXcw4w==
      - INFLUXDB_ORG=nhom_12
      - INFLUXDB_BUCKET=buckets1
    ports:
      - "3003:3003"
    depends_on:
      - redis
      - influxdb3
    networks:
      - game-network
    restart: unless-stopped

  # InfluxDB instances for data sharding
  influxdb1:
    image: influxdb:2.7
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=boies2608
      - DOCKER_INFLUXDB_INIT_PASSWORD=26o82oo5
      - DOCKER_INFLUXDB_INIT_ORG=nhom_12
      - DOCKER_INFLUXDB_INIT_BUCKET=buckets1
    volumes:
      - influxdb1-data:/var/lib/influxdb2
    networks:
      - game-network

  influxdb2:
    image: influxdb:2.7
    ports:
      - "8087:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=boies2608
      - DOCKER_INFLUXDB_INIT_PASSWORD=26o82oo5
      - DOCKER_INFLUXDB_INIT_ORG=nhom_12
      - DOCKER_INFLUXDB_INIT_BUCKET=buckets1
    volumes:
      - influxdb2-data:/var/lib/influxdb2
    networks:
      - game-network

  influxdb3:
    image: influxdb:2.7
    ports:
      - "8088:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=boies2608
      - DOCKER_INFLUXDB_INIT_PASSWORD=26o82oo5
      - DOCKER_INFLUXDB_INIT_ORG=nhom_12
      - DOCKER_INFLUXDB_INIT_BUCKET=buckets1
    volumes:
      - influxdb3-data:/var/lib/influxdb2
    networks:
      - game-network

  # Grafana for monitoring
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=26o82oo5
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - influxdb1
      - influxdb2
      - influxdb3
    networks:
      - game-network

volumes:
  redis-data:
  influxdb1-data:
  influxdb2-data:
  influxdb3-data:
  grafana-data:

networks:
  game-network:
    driver: bridge
